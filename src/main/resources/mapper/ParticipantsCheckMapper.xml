<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jqsoft.babyservice.mapper.biz.ParticipantsCheckMapper">
    <resultMap id="BaseResultMap" type="com.jqsoft.babyservice.entity.biz.ParticipantsCheck">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="meeting_id" jdbcType="VARCHAR" property="meetingId" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="process_instance_id" jdbcType="VARCHAR" property="processInstanceId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, meeting_id, user_id, state, process_instance_id, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from biz_participants_check
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from biz_participants_check
    where id = #{id,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="com.jqsoft.babyservice.entity.biz.ParticipantsCheck">
    insert into biz_participants_check (id, meeting_id, user_id, 
      state, process_instance_id, create_time, update_time
      )
    values (#{id,jdbcType=VARCHAR}, #{meetingId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, 
      #{state,jdbcType=TINYINT},#{processInstanceId},#{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.jqsoft.babyservice.entity.biz.ParticipantsCheck">
    insert into biz_participants_check
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="meetingId != null">
        meeting_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="processInstanceId != null">
        process_instance_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="meetingId != null">
        #{meetingId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="processInstanceId != null">
        #{processInstanceId},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.jqsoft.babyservice.entity.biz.ParticipantsCheck">
    update biz_participants_check
    <set>
      <if test="meetingId != null">
        meeting_id = #{meetingId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="processInstanceId != null">
        process_instance_id = #{processInstanceId},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.jqsoft.babyservice.entity.biz.ParticipantsCheck">
    update biz_participants_check
    set meeting_id = #{meetingId,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=VARCHAR},
      state = #{state,jdbcType=TINYINT},
      process_instance_id = #{processInstanceId},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>

    <select id="participantsList" parameterType="string"
            resultType="com.jqsoft.babyservice.entity.biz.ParticipantsCheck">
        select a.id,a.user_id,a.create_time,a.update_time,b.name userName,a.state from biz_participants_check a
        left join biz_user_info b on a.user_id = b.id
        where a.meeting_id = #{meetingId} and a.state in (0,1,2) and b.status = 1 order by a.create_time desc
  </select>

  <select id="participantsBadges" parameterType="string" resultType="map">
        SELECT a.state, count(1) cnt  FROM biz_participants_check a LEFT JOIN biz_user_info b ON a.user_id = b.id
        WHERE a.meeting_id = #{meetingId} AND a.state IN (0,1,2) AND b.STATUS = 1
        GROUP BY a.state ORDER BY a.state
  </select>

  <select id="getHadRegParticipants" parameterType="string" resultType="map">
    select a.user_id userId,b.email,a.org_id orgId,b.name,b.userid ddUserId from
    biz_participants_check a left join biz_user_info b on a.user_id = b.id
    where a.state = 1 and b.status = 1 and a.meeting_id = #{meetingId} order by a.create_time
  </select>

  <update id="updateStateByProcessInstanceId" parameterType="map">
    update biz_participants_check set state = #{state,jdbcType=TINYINT} where process_instance_id = #{processInstanceId}
  </update>

  <delete id="deleteByProcessInstanceId">
    delete from biz_participants_check where process_instance_id = #{processInstanceId}
  </delete>
</mapper>